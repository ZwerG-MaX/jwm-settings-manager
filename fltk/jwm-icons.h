/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */
// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef jwm_icons_h
#define jwm_icons_h
#include <FL/Fl.H>
#include <libintl.h>
#include <FL/Fl_File_Chooser.H>
#include <string>
#include <stdlib.h>
#include <iostream>
#include "../include/jwmrc.h"
#include "../include/icons.hpp"
#include "../data/icons/jsm-icons.xpm"
#include <FL/Fl_Select_Browser.H>
#include "../include/ui.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Input.H>

class IconsUI {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *icons_window;
private:
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
public:
  Fl_Button *save_button;
private:
  inline void cb_save_button_i(Fl_Button*, void*);
  static void cb_save_button(Fl_Button*, void*);
public:
  Fl_Browser *iconsBrowser;
  Fl_Light_Button *icon_themes_button;
private:
  inline void cb_icon_themes_button_i(Fl_Light_Button*, void*);
  static void cb_icon_themes_button(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *directories_button;
private:
  inline void cb_directories_button_i(Fl_Light_Button*, void*);
  static void cb_directories_button(Fl_Light_Button*, void*);
public:
  Fl_Button *edit_button;
private:
  inline void cb_edit_button_i(Fl_Button*, void*);
  static void cb_edit_button(Fl_Button*, void*);
public:
  Fl_Double_Window* editor_window();
  Fl_Double_Window *edit_window;
private:
  inline void cb_Cancel1_i(Fl_Button*, void*);
  static void cb_Cancel1(Fl_Button*, void*);
  inline void cb_OK_i(Fl_Button*, void*);
  static void cb_OK(Fl_Button*, void*);
public:
  Fl_Input *dir_edit_input;
private:
  inline void cb_Choose_i(Fl_Button*, void*);
  static void cb_Choose(Fl_Button*, void*);
};
#endif
