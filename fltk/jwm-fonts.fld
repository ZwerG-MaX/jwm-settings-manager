# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
comment {/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */} {in_source in_header
} 

decl {\#include <libintl.h>} {public global
} 

decl {\#include <FL/Fl_File_Chooser.H>} {public global
} 

decl {\#include <string>} {public global
} 

decl {\#include <stdlib.h>} {public global
} 

decl {\#include <iostream>} {public global
} 

decl {\#include <FL/Fl_Color_Chooser.H>} {public global
} 

decl {\#include "../include/jwmrc.h"} {public global
} 

decl {\#include "../include/ui.h"} {public global
} 

decl {\#include "../include/fonts.hpp"} {public global
} 

decl {\#include "../data/icons/jsm-fonts.xpm"} {public global
} 

class FontUI {open
} {
  decl {std::string currentElement} {private local
  }
  decl {Fl_Output* Widget} {private local
  }
  Function {make_window()} {open
  } {
    code {load();} {}
    Fl_Window font_window {
      label {Font Settings} open
      xywh {339 85 280 330} type Double color 47 hide resizable
      code0 {startup(o,jsm_fonts_xpm);} xclass {jsm-fonts}
    } {
      Fl_Scroll {} {open
        xywh {0 -5 280 335} color 31
      } {
        Fl_Box window_box {
          xywh {5 3 270 97} box FLAT_BOX color 44
        }
        Fl_Output window_font {
          label {Window Title Font}
          xywh {45 20 160 30} box FLAT_BOX color 53 selection_color 72 align 1 when 1
          code0 {get_font("WindowStyle",o);}
        }
        Fl_Button active_window_font_color_button {
          label Active
          callback {window_font_color(o, 1);}
          xywh {210 20 60 30} box FLAT_BOX color 23 align 1 when 6
          code0 {get_window_font_color(o,1);}
        }
        Fl_Button {} {
          callback {currentElement = "WindowStyle";
Widget=window_font;
font_chooser_window()->show();}
          tooltip {Open the font list Window} image {custom_buttons/gear16.png} xywh {10 20 30 30} box FLAT_BOX color 23
        }
        Fl_Button window_font_color_button {
          label Inactive
          callback {window_font_color(o, 2);}
          xywh {210 65 60 30} box FLAT_BOX color 23 align 5 when 6
          code0 {get_window_font_color(o,2);}
        }
        Fl_Box menu_box {
          xywh {5 105 270 95} box FLAT_BOX color 44
        }
        Fl_Output menu_font {
          label {Menu Font}
          xywh {45 120 160 30} box FLAT_BOX color 53 selection_color 72 align 1
          code0 {get_font("MenuStyle",o);}
        }
        Fl_Button {} {
          callback {currentElement = "MenuStyle";
Widget=menu_font;
font_chooser_window()->show();}
          tooltip {Open the font list Window} image {custom_buttons/gear16.png} xywh {10 120 30 30} box FLAT_BOX color 23
        }
        Fl_Button menu_font_color_button {
          callback {font_color(o, "MenuStyle");}
          xywh {210 120 60 30} box FLAT_BOX color 23 when 6
          code0 {get_font_color(o,"MenuStyle");}
        }
        Fl_Output panel_button_font {
          label {Panel Button Font}
          xywh {45 165 160 30} box FLAT_BOX color 53 selection_color 72 align 1
          code0 {if(!newOne()){get_font("TrayButtonStyle",o);}}
          code1 {else{o->hide();}}
        }
        Fl_Button {} {
          callback {currentElement = "TrayButtonStyle";
Widget=panel_button_font;
font_chooser_window()->show();}
          tooltip {Open the font list Window} image {custom_buttons/gear16.png} xywh {10 165 30 30} box FLAT_BOX color 23
          code0 {if(newOne()){o->hide();}}
        }
        Fl_Button traybutton_font_color_button {
          callback {font_color(o, "TrayButtonStyle");}
          xywh {210 165 60 30} box FLAT_BOX color 23 when 6
          code0 {if(!newOne()){get_font_color(o,"TrayButtonStyle");}}
          code1 {else{o->hide();}}
        }
        Fl_Box panel_box {
          xywh {5 206 270 96} box FLAT_BOX color 44
        }
        Fl_Output panel_font {
          label {Panel Font}
          xywh {45 223 160 30} box FLAT_BOX color 53 selection_color 72 align 1
          code0 {get_font("TrayStyle",o);}
        }
        Fl_Button {} {
          callback {currentElement = "TrayStyle";
Widget=panel_font;
font_chooser_window()->show();}
          tooltip {Open the font list Window} image {custom_buttons/gear16.png} xywh {10 223 30 30} box FLAT_BOX color 23
        }
        Fl_Button panel_font_color_button {
          callback {font_color(o, "TrayStyle");}
          xywh {210 223 60 30} box FLAT_BOX color 23 when 6
          code0 {get_font_color(o,"TrayStyle");}
        }
        Fl_Button task_font_color_button {
          callback {font_color(o, "TaskListStyle");}
          xywh {210 268 60 30} box FLAT_BOX color 23 when 6
          code0 {if(newOne()){o->hide();}else{get_font_color(o,"TaskListStyle");}}
        }
        Fl_Output task_font {
          label {Running App List Font}
          xywh {45 268 160 30} box FLAT_BOX color 53 selection_color 72 align 1
          code0 {if(!newOne()){get_font( "TaskListStyle", o);}}
          code1 {else{o->hide();}}
        }
        Fl_Button {} {
          callback {currentElement = "TaskListStyle";
Widget=task_font;
font_chooser_window()->show();}
          tooltip {Open the font list Window} image {custom_buttons/gear16.png} xywh {10 268 30 30} box FLAT_BOX color 23
          code0 {if(newOne()){o->hide();}}
        }
        Fl_Button {} {
          label Cancel
          callback {cancel();
font_window->hide();}
          tooltip {No changes will be saved} xywh {155 305 60 25} box FLAT_BOX down_box GTK_DOWN_BOX color 80 selection_color 81 labelcolor 7
        }
        Fl_Button {} {
          label OK
          callback {saveChanges();}
          tooltip {Write to configuration file} xywh {225 305 45 25} box FLAT_BOX down_box GTK_DOWN_BOX color 61 selection_color 59 labelcolor 55
        }
      }
    }
  }
  Function {font_chooser_window()} {open
  } {
    Fl_Window font_choosing {
      label {Choose a Font} open selected
      xywh {688 87 315 410} type Double hide
      code0 {startup(o,jsm_fonts_xpm);} xclass {jsm-fonts}
    } {
      Fl_Button {} {
        label Cancel
        callback {font_choosing->hide();}
        tooltip {No changes will be saved} xywh {195 380 60 25} box FLAT_BOX down_box GTK_DOWN_BOX color 80 selection_color 81 labelcolor 7
      }
      Fl_Button {} {
        label OK
        callback {font_chooser_cb(Widget,chooser_size,font_name,currentElement);}
        tooltip {Write to configuration file} xywh {265 380 45 25} box FLAT_BOX down_box GTK_DOWN_BOX color 61 selection_color 59 labelcolor 55
      }
      Fl_Browser font_browser {
        callback {font_browser_cb(font_browser,font_name,font_size_slider);}
        xywh {5 5 305 285} type Hold box FLAT_BOX color 55 selection_color 72 labelfont 8 when 4
        code0 {font_populate(o);}
      }
      Fl_Output font_name {
        callback {//const char * item = font_browser->text(font_browser->value());
unsigned int size_of_font = get_font_size(currentElement);
Fl_Fontsize fs = size_of_font;
o->textsize(fs);
o->redraw();}
        xywh {5 325 305 50} box FLAT_BOX color 55 selection_color 80 labelsize 20 when 6
        code0 {get_font(currentElement,o);}
      }
      Fl_Slider font_size_slider {
        callback {int size_of_font = o->value();
chooser_size->value(size_of_font);
chooser_size->redraw();
Fl_Fontsize fs = size_of_font;
font_name->textsize(fs);
font_name->redraw();}
        xywh {5 295 250 25} type Horizontal box GTK_DOWN_BOX color 41 selection_color 48 when 4 minimum 8 maximum 200 step 1 value 12
        code0 {int fs = get_font_size(currentElement);}
        code1 {o->value(fs);}
      }
      Fl_Value_Output chooser_size {
        xywh {265 295 45 25} box FLAT_BOX color 23 minimum 8 maximum 200 step 1 value 12
        code0 {int fs = get_font_size(currentElement);}
        code1 {o->value(fs);}
      }
    }
  }
} 
