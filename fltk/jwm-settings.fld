# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
comment {/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using tinyxml2 and FLTK
 *
 *         Copyright (C) 2014  Israel <israel@torios.org>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 * This has been developed by Israel<israel@torios.org>
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */} {in_source in_header
} 

decl {\#include <libintl.h>} {public global
} 

decl {\#include "../include/flDesktop.h"} {public global
} 

decl {\#include "../include/flPanel.h"} {public global
} 

decl {\#include "../include/flWindow.h"} {public global
} 

decl {\#include "../include/flFont.h"} {public global
} 

decl {\#include "../include/flAutostart.h"} {public global
} 

decl {\#include "../include/flKeyboard.h"} {public global
} 

decl {\#include "../include/flMouse.h"} {public global
} 

decl {\#include "../include/flThemes.h"} {public global
} 

decl {\#include "../include/flIcons.h"} {public global
} 

decl {\#include "../include/ui.h"} {public global
} 

decl {\#include "../include/tinyxml2.h"} {public global
} 

decl {\#include "../data/icons/jwm-settings-manager.xpm"} {public global
} 

decl {//\#include <FL/x.H>} {public global
} 

decl {//\#include <X11/xpm.h>} {public global
} 

class SettingsUI {open
} {
  Function {make_window()} {open
  } {
    Fl_Window settings_window {
      label {Settings Manager} open
      xywh {139 297 295 290} type Double color 45 labelcolor 7
      code0 {Config config;}
      code1 {o->icon(config.Get_Fl_Icon(jwm_settings_manager));}
      code2 {config.under_mouse(o);} xclass {jwm-settings-manager} visible
    } {
      Fl_Button {} {
        label Panel
        callback {settings_window->hide();
UI ui;ui.showPanel();}
        image {../data/img/jsm-panel.png} xywh {10 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Keyboard
        callback {settings_window->hide();
UI ui;ui.showKeyboard();}
        image {../data/img/jsm-keyboard.png} xywh {105 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Icons
        callback {settings_window->hide();
UI ui;ui.showIcons();}
        image {../data/img/jsm-icons.png} xywh {200 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Desktop
        callback {settings_window->hide();
UI ui;ui.showDesktop();}
        image {../data/img/jsm-desktop.png} xywh {10 100 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Mouse
        callback {settings_window->hide();
UI ui;ui.showMouse();}
        image {../data/img/jsm-mouse.png} xywh {105 100 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Fonts
        callback {settings_window->hide();
UI ui;ui.showFonts();}
        image {../data/img/jsm-fonts.png} xywh {200 100 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Windows
        callback {settings_window->hide();
UI ui;ui.showWindow();}
        image {../data/img/jsm-windows.png} xywh {10 195 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Themes
        callback {settings_window->hide();
UI ui;ui.showThemes();}
        tooltip {This is for Predefined Thems} image {../data/img/jsm-theme.png} xywh {105 195 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Autostart
        callback {settings_window->hide();
UI ui;ui.showAutostart();}
        image {../data/img/jsm-autostart.png} xywh {200 195 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label {Users and Groups}
        callback {adduser();} selected
        image {../data/img/flAdduser.xpm} xywh {55 295 80 65} box FLAT_BOX color 23 align 128 hide deactivate
        code0 {isAdduser(o);}
      }
      Fl_Button {} {
        label {System Details} selected
        image {../data/img/jsm-theme.png} xywh {150 295 80 65} box FLAT_BOX color 23 align 128 hide deactivate
      }
    }
  }
  Function {isAdduser(Fl_Button *o)} {open
  } {
    code {Config config;
bool isfladduser = config.testExec("fladduser");

if(isfladduser){
  o->show();
}
else{
  o->hide();
}} {}
  }
  Function {adduser()} {open
  } {
    code {int retval = system("bash -c 'fladduser &disown'");
if(retval !=0){
  std::cerr<<"system(\\"bash -c 'fladduser &disown'\\") did not return 0"<<std::endl;
}} {}
  }
} 
