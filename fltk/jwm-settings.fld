# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
comment {/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */} {in_source in_header
} 

decl {\#include <libintl.h>} {public global
} 

decl {\#include "../include/ui.h"} {public global
} 

decl {\#include "../include/jwmrc.h"} {public global
} 

decl {\#include "../include/common.hpp"} {public global
} 

decl {\#include "../include/fltkfunctions.hpp"} {public global
} 

decl {\#include "../data/icons/jwm-settings-manager.xpm"} {public global
} 

class SettingsUI {open
} {
  Function {make_window()} {open
  } {
    Fl_Window settings_window {
      label {Settings Manager} open
      xywh {948 119 260 345} type Double color 45 labelcolor 7
      code1 {startup(o,jwm_settings_manager);} xclass {jwm-settings-manager} visible
    } {
      Fl_Button {} {
        label Panel
        callback {settings_window->hide();
showPanel();}
        image {../data/img/jsm-panel.png} xywh {5 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Keyboard
        callback {settings_window->hide();
showKeyboard();}
        image {../data/img/jsm-keyboard.png} xywh {90 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Icons
        callback {settings_window->hide();
showIcons();}
        image {../data/img/jsm-icons.png} xywh {175 5 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Desktop
        callback {settings_window->hide();
showDesktop();}
        image {../data/img/jsm-desktop.png} xywh {5 90 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Touchpad
        callback {settings_window->hide();
showMouse();}
        image {../data/img/jsm-mouse.png} xywh {90 90 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Fonts
        callback {settings_window->hide();
showFonts();}
        image {../data/img/jsm-fonts.png} xywh {175 90 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Windows
        callback {settings_window->hide();
showWindow();}
        image {../data/img/jsm-windows.png} xywh {5 175 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Themes
        callback {settings_window->hide();
showThemes();}
        tooltip {This is for Predefined Thems} image {../data/img/jsm-theme.png} xywh {90 175 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label Autostart
        callback {settings_window->hide();
showAutostart();}
        image {../data/img/jsm-autostart.png} xywh {175 175 80 80} box FLAT_BOX color 23
      }
      Fl_Button {} {
        label {Users and Groups}
        callback {adduser();}
        xywh {5 260 80 80} box FLAT_BOX color 23 align 128
        code0 {if(isAdduser(o))makeWidgetIcon("config-users",o,48);}
      }
      Fl_Button {} {
        label {System Details}
        callback {addinfo();} selected
        xywh {90 260 80 80} box FLAT_BOX color 23 align 128
        code0 {if(isInfo(o))makeWidgetIcon("help-browser",o,48);}
      }
      Fl_Button {} {
        label Popups
        callback {settings_window->hide();
showPopus();}
        xywh {175 260 80 80} box FLAT_BOX color 23 align 128
        code0 {makeWidgetIcon("preferences-system-notifications",o,48);}
      }
    }
  }
  Function {isAdduser(Fl_Button *o)} {open return_type bool
  } {
    code {bool isfladduser = testExec("fladduser");
if(isfladduser){o->show();}
else{o->hide();}
return isfladduser;} {}
  }
  Function {adduser()} {open
  } {
    code {settings_window->hide();
int retval = linuxcommon::run_a_program_in_background("fladduser");
if(retval !=0){errorOUT("Could not run the user adding program");}} {}
  }
  Function {isInfo(Fl_Button *o)} {open return_type bool
  } {
    code {bool isexec = testExec("torios-info");
if(isexec){
  o->show();
}
else{
  o->hide();
}
return isexec;} {}
  }
  Function {addinfo()} {open
  } {
    code {settings_window->hide();
int retval = linuxcommon::run_a_program_in_background("torios-info");
if(retval !=0){
  std::cerr<<"system(\\"bash -c 'torios-info &disown'\\") did not return 0"<<std::endl;
}} {}
  }
} 
