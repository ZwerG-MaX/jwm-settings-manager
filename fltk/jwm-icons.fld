# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
comment {/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */} {in_source in_header
} 

decl {\#include <libintl.h>} {public global
} 

decl {\#include <FL/Fl_File_Chooser.H>} {public global
} 

decl {\#include <string>} {public global
} 

decl {\#include <stdlib.h>} {public global
} 

decl {\#include <iostream>} {public global
} 

decl {\#include "../include/jwmrc.h"} {public global
} 

decl {\#include "../include/icons.hpp"} {public global
} 

decl {\#include "../data/icons/jsm-icons.xpm"} {public global
} 

decl {\#include <FL/Fl_Select_Browser.H>} {public global
} 

decl {\#include "../include/ui.h"} {public global
} 

class IconsUI {open
} {
  Function {make_window()} {open
  } {
    code {load();} {}
    Fl_Window icons_window {
      label Icons open
      xywh {730 299 320 260} type Double color 31 resizable
      code0 {startup(o,jsm_desktop_xpm);} xclass {jsm-icons} visible
    } {
      Fl_Scroll {} {open
        xywh {0 0 316 300} color 31
      } {
        Fl_Button {} {
          label Cancel
          callback {cancel();
//icons_window->hide();
/*UI ux;
ux.showSettings();*/}
          xywh {211 230 57 25} box FLAT_BOX color 80 selection_color 81 labelcolor 7
        }
        Fl_Button save_button {
          label OK
          callback {if(!switchTheme(iconsBrowser,32)){
  std::cerr<<"Error switching themes"<<std::endl;
}}
          tooltip {Write to configuration file} xywh {271 230 45 25} box FLAT_BOX color 61 selection_color 59 labelcolor 55
        }
        Fl_Browser iconsBrowser {
          xywh {5 5 310 220} type Hold box FLAT_BOX selection_color 80 when 8
          code0 {//populateIconThemes(o);}
          code1 {populateFLBrowser(o,"IconPath");}
        }
        Fl_Light_Button icon_themes_button {
          label Themes
          callback {iconsBrowser->clear();
directories_button->value(0);
directories_button->value(0);
edit_button->hide();
populateIconThemes(iconsBrowser);}
          xywh {101 230 75 25} box FLAT_BOX value 1 selection_color 63 hide deactivate
        }
        Fl_Light_Button directories_button {
          label Directories
          callback {iconsBrowser->clear();
icon_themes_button->value(0);
icon_themes_button->value(0);
edit_button->show();
populateFLBrowser(iconsBrowser,"IconPath");}
          xywh {4 230 95 25} box FLAT_BOX value 1 selection_color 63
        }
        Fl_Button edit_button {
          label Edit
          callback {editor_window()->show();
if(!edit_value(iconsBrowser,dir_edit_input)){
  std::cerr<<"Line was not edited"<<std::endl;
}} selected
          tooltip {Write to configuration file} xywh {140 230 40 25} box FLAT_BOX color 48 selection_color 59 labelcolor 32
        }
      }
    }
  }
  Function {editor_window()} {open
  } {
    Fl_Window edit_window {
      label {Edit Directory} open
      xywh {181 284 310 70} type Double
      code0 {startup(o,jsm_desktop_xpm);} visible
    } {
      Fl_Button {} {
        label Cancel
        callback {edit_window->hide();}
        xywh {195 40 57 25} box FLAT_BOX color 80 selection_color 81 labelcolor 7
      }
      Fl_Button {} {
        label OK
        callback {if(!saveChanges()){errorOUT("Failed to save the changes");}
edit_window->hide();}
        tooltip {Write to configuration file} xywh {260 40 45 25} box FLAT_BOX color 61 selection_color 59 labelcolor 55
      }
      Fl_Input dir_edit_input {
        xywh {5 5 300 30} box FLAT_BOX
      }
      Fl_Button {} {
        label {Choose a new directory}
        callback {const char* original=dir_edit_input->value();
std::string tempdir="";
if(original!=NULL){tempdir=original;}
std::string result=choose_a_directory(tempdir,"");
if(result.compare("")!=0){
  if(original==NULL){addElementWithText("IconPath",result);}
  else{
    std::string tmp=original;
    changeElementText("IconPath",tmp,result);
  }
  iconsBrowser->clear();
  populateFLBrowser(iconsBrowser,"IconPath");
}}
        xywh {5 40 175 25} box FLAT_BOX color 40 selection_color 0 labelcolor 7
      }
    }
  }
} 
