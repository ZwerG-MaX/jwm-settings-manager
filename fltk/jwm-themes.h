/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */
// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef jwm_themes_h
#define jwm_themes_h
#include <FL/Fl.H>
#include <libintl.h>
#include <string>
#include <stdlib.h>
#include <iostream>
#include "../include/jwmrc.hpp"
#include "../include/themes.hpp"
#include "../include/ui.hpp"
#include "../data/icons/jsm-theme.xpm"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>

class ThemesUI : public Theme {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *themes_window;
  Fl_Button *ok;
private:
  inline void cb_ok_i(Fl_Button*, void*);
  static void cb_ok(Fl_Button*, void*);
public:
  Fl_Browser *sys_theme;
private:
  inline void cb_sys_theme_i(Fl_Browser*, void*);
  static void cb_sys_theme(Fl_Browser*, void*);
public:
  Fl_Box *button_icon;
  Fl_Box *button;
  Fl_Box *tray;
  Fl_Box *awin2;
  Fl_Box *awin;
  Fl_Box *awin_text;
  Fl_Box *amin;
  Fl_Box *amax;
  Fl_Box *aclose;
  Fl_Box *iwin;
  Fl_Box *iwin2;
  Fl_Box *iwin_text;
  Fl_Box *imin;
  Fl_Box *imax;
  Fl_Box *iclose;
  Fl_Button *save_button;
private:
  inline void cb_save_button_i(Fl_Button*, void*);
  static void cb_save_button(Fl_Button*, void*);
public:
  Fl_Button *cancel_button;
private:
  inline void cb_cancel_button_i(Fl_Button*, void*);
  static void cb_cancel_button(Fl_Button*, void*);
public:
  Fl_Browser *usr_theme;
private:
  inline void cb_usr_theme_i(Fl_Browser*, void*);
  static void cb_usr_theme(Fl_Browser*, void*);
public:
  Fl_Button *overwritten;
private:
  inline void cb_overwritten_i(Fl_Button*, void*);
  static void cb_overwritten(Fl_Button*, void*);
public:
  Fl_Input *current_theme;
};
#endif
