# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
comment {/*                 Joe's Window Manager Configuration
 *
 * This program configures JWM using pugixml and FLTK
 *
 *         Copyright (C) 2016  Israel <israeldahl@gmail.com>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * This has been developed as a part of the ToriOS Project
 *
 *
 * You may redistribute this, but you must keep this comment in place
 * Jesus is my Lord, and if you don't like it feel free to ignore it.
 */} {in_source in_header
} 

decl {\#include <libintl.h>} {public global
} 

decl {\#include <string>} {public global
} 

decl {\#include <stdlib.h>} {public global
} 

decl {\#include <iostream>} {public global
} 

decl {\#include "../include/jwmrc.h"} {public global
} 

decl {\#include "../include/desktop.hpp"} {public global
} 

decl {\#include <algorithm>} {public global
} 

decl {\#include "../include/ui.h"} {public global
} 

decl {\#include "../data/icons/jsm-desktop.xpm"} {public global
} 

class DesktopUI {open
} {
  decl {std::string thisBG;} {public local
  }
  Function {make_window()} {open
  } {
    code {load();
thisBG=getBackground();} {}
    Fl_Window desktop_window {
      label {Desktop Settings} open
      xywh {752 123 360 420} type Double color 31 resizable
      code0 {startup(o,jsm_desktop_xpm);} xclass {jsm-desktop} visible
    } {
      Fl_Scroll {} {open
        xywh {0 0 360 420} color 31
      } {
        Fl_Box background_displayer_thingie {
          xywh {8 5 345 270} box FLAT_BOX color 37 when 6
          code0 {background(o,thisBG);}
        }
        Fl_Box color_display1 {
          xywh {8 5 345 270} box FLAT_BOX color 37 when 6
          code0 {background1(o,thisBG);}
        }
        Fl_Box color_display2 {
          xywh {8 135 345 140} box FLAT_BOX color 37 when 6
          code0 {background2(o,thisBG);}
        }
        Fl_Button {} {
          label {Choose Image}
          callback {bg_chooser_cb(background_displayer_thingie,current_bg,color_display1,color_display2);}
          xywh {8 315 110 25} box FLAT_BOX color 23
        }
        Fl_Button {} {
          label {Choose Color}
          callback {one_color(color_display1,color_display2,background_displayer_thingie,current_bg);}
          tooltip {This will take icons off the desktop} xywh {123 315 100 25} box FLAT_BOX color 23
        }
        Fl_Button {} {
          label {Choose Gradient}
          callback {two_color(color_display1,color_display2,background_displayer_thingie,current_bg);}
          tooltip {This will take icons off the desktop} xywh {228 315 125 25} box FLAT_BOX color 23
        }
        Fl_Check_Button icons_check {
          label {Icons on Desktop}
          callback {bool useful=use_icons_on_desktop(background_displayer_thingie,thisBG);
o->value(0);
if(useful){o->value(1);}}
          xywh {5 345 140 25} box FLAT_BOX down_box GTK_DOWN_BOX color 31 selection_color 59 align 24 when 1
          code0 {if(isIconsOnDesktop())o->value(1);}
        }
        Fl_Output current_bg {
          xywh {8 280 345 30} box FLAT_BOX color 50 selection_color 72 labelfont 1 align 33
          code0 {bg_name(o,thisBG);}
        }
        Fl_Check_Button check_desktops {
          label {Multiple Desktops}
          callback {useMultipleDesktops(num_desktop_w,num_desktop_h);}
          tooltip {This allows you to have multiple screens to work on from one Display} xywh {5 370 142 25} box FLAT_BOX down_box GTK_DOWN_BOX color 31 selection_color 59 align 24 when 1
          code1 {bool m = multipleDesktops();o->value(0);}
          code2 {if(m){o->value(1);}}
        }
        Fl_Value_Input num_desktop_w {
          label {Number of Desktops Wide}
          callback {int width = int((o->value()));
num_desktop_wh_cb("width",width,num_desktop_w,num_desktop_h,check_desktops);}
          xywh {149 345 20 20} box FLAT_BOX color 53 align 8
          code0 {int width = getIntAttribute("Desktops","width");}
          code1 {o->value(width);}
        }
        Fl_Value_Input num_desktop_h {
          label {Number of Desktops High }
          callback {int height = int((o->value()));
num_desktop_wh_cb("height",height,num_desktop_w,num_desktop_h,check_desktops);} selected
          xywh {149 370 20 20} box FLAT_BOX color 53 align 8
          code0 {int height = getIntAttribute("Desktops","height");}
          code1 {o->value(height);}
        }
        Fl_Button {} {
          label Cancel
          callback {cancel();}
          xywh {233 390 65 25} box FLAT_BOX color 80 selection_color 81 labelcolor 7
        }
        Fl_Button {} {
          label OK
          callback {saveChanges();
desktop_window->hide();}
          tooltip {Write to configuration file} xywh {308 390 45 25} box FLAT_BOX color 61 selection_color 59 labelcolor 55
        }
      }
    }
  }
} 
