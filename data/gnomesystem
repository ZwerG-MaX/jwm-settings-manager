#!/bin/bash
# MANY thanks to Puppy and technosaurus!!
shopt -s nullglob
SYS_ROOT="8"
JWMRC="$HOME/.jwmrc"
if [ ! -d "${HOME}"/.config ]
then
  mkdir "${HOME}"/.config
fi
GNOME_SYS_MENUFILE="${HOME}/.config/gnomesystem"
DD=/usr/share/desktop-directories
ICONDIRS=( $(grep "<IconPath" "${JWMRC}" | sed 's|<IconPath>||' | sed 's|</IconPath>||'| sed 's|/usr/share/pixmaps/ ||'| sed 's|/usr/share/icons/ ||') )
png=0
svg=0
for i in "${ICONDIRS[@]}"
do
DIR2="$i"
  PNG=$(ls ${DIR2}*.png 2>/dev/null)
  if [ ! -z "${PNG}" ]
  then
    png=$((png+1))
  fi
  SVG=$(ls ${DIR2}*.svg 2>/dev/null)
  if [ ! -z "${SVG}" ]
  then
    svg=$((svg+1))
  fi
done
if [ $((svg>png)) ]
then
   EXT=".svg"
else
   EXT=".png"
fi

if [ -f "${GNOME_SYS_MENUFILE}" ]
then
  rm "${GNOME_SYS_MENUFILE}"
  echo "replacing '$GNOME_SYS_MENUFILE'"
else
  echo "creating '$GNOME_SYS_MENUFILE'"
  touch "${GNOME_SYS_MENUFILE}"
fi
if [ ! -d "${HOME}" ]
then
  echo "WARNING: Please set your HOME environment variable and re-run $0"
  exit 1
fi
if [ ! -d "${DD}" ]
then
  echo "You are missing the Desktop Directories.. in $DD
you must install this program again or modify this script $0"
  exit 1
fi
{	#localization block
[ "$myLANG" ] || myLANG="${LANGUAGE%% *}"
[ "$myLANG" ] || myLANG="${LANG%_*}"

[ -f "/usr/share/locale/$myLANG/LC_MESSAGES/jwm" ] && . "/usr/share/locale/$myLANG/LC_MESSAGES/jwm"
}

{	#parse .desktop files and sort generated menu entries into subcategories
for DESKTOP_FILE in /usr/share/applications/*.desktop ; do
	NAME="" ICON="" CATS="" EXEC="" LINE="" TERM="" #prevent carryover from previous file
	while read LINE || [ "$LINE" ]; do
		#if [ "$LINE" == "[Desktop Action*" ]
		#then
		case $LINE in
                       OnlyShowIn=*)
                             NAME=""
                             ICON=""
                             CATS=""
                             EXEC=""
                             TERM=""
                             break;;
                        NoDisplay=true)
                             NAME=""
                             ICON=""
                             CATS=""
                             EXEC=""
                             TERM=""
                             break;;
			Name?${myLANG%_*}?=*|Name=*) NAME="${LINE#*=}"'' ;; # sc0ttman... should use "Name[$myLANG]=" if found
			'[Desktop Entry'*) continue ;;
			TryExec=*|Exec=*) EXEC="${LINE#*=}"'' ;;
			Categories=*) CATS="${LINE#*=}"'' ;;
			Icon=*) ICON="${LINE#*=}"''  ;;
			Terminal=*) TERM="${LINE#*=}"'';;
			"["*) break ;; ##any other groups thanks to technosaurus
			
			# Comment=*|Comment?${LANG%_*}?=*) COMMENT="${LINE#*=}"''  ;; #jwm doesn't support tooltips on menu items yet ... uncomment this if it ever does
		esac
		if [ "${TERM}" == "true" ]
                then
                   EXEC="x-terminal-emulator -e ${EXEC}"
                fi
	done < "$DESKTOP_FILE"
if [[ "${ICON##*.}" == "xpm" ]] || [[ "${ICON##*.}" == "svg" ]] || [[ "${ICON##*.}" == "png" ]] || [[ "${ICON}" == "/*" ]]
then
	MenuEntry='
	<Program label="'${NAME}'" icon="'${ICON}'">'${EXEC%\ \%?}'</Program>'
else
	MenuEntry='
	<Program label="'${NAME}'" icon="'${ICON}${EXT}'">'${EXEC%\ \%?}'</Program>'
fi

#	[ "${EXEC}" ] && MenuEntry='<Program label="'${NAME}'" icon="'${ICON}${EXT}'">'${EXEC%\ \%?}'</Program> '
	#CATS="${CATS%;*}" # sc0ttman, keep just the first (or only) category.. everything before the semi-colon ;...no we may want multiple entries?
	for CAT in $(echo "${CATS//;/	}") ; do
	#We are just going to build in the /etc/xdg/menus/hierarchy b/c its faster to inline it ... and Ctrl+Tab gets annoying
	case "$CAT" in
		Settings)SET=${SET}${MenuEntry};;
		System)SYS=${SYS}${MenuEntry};;
	esac
	done
done
}
for MENU_SYS in ${DD}/jwm-sys* ; do
	while read SYS_LINE || [ "$SYS_LINE" ]; do
		case $SYS_LINE in
			Name?${myLANG%_*}?=*|Name=*) SYS_NAME="${SYS_LINE#*=}"'';;
			Icon=*) SYS_ICON="${SYS_LINE#*=}"''  ;;
		esac
	done < "$MENU_SYS"
done
{	#Now generate the full menu with some formatting

if [ ! -z "${SET}" ] && [ ! -z "${SYS}" ]
then
#Settings)SET=${SET}${MenuEntry};;
GNOME_MENU='<?xml version="1.0"?>
<JWM>
<!-- generated by '$PWD'/'$0' -->
  <RootMenu height="0" onroot="'$SYS_ROOT'">
  '${SET}'
    <Menu label="'${SYS_NAME}'" icon="'${SYS_ICON}${EXT}'" height="0">
      '${SYS}'
   </Menu>
  </RootMenu>
</JWM>'
elif [ -z "${SET}" ] && [ ! -z "${SYS}" ]
then
#System)SYS=${SYS}${MenuEntry};;
GNOME_MENU='<?xml version="1.0"?>
<JWM>
<!-- generated by '$PWD'/'$0' -->
  <RootMenu height="0" onroot="'$SYS_ROOT'">
  '${SYS}'
  </RootMenu>
</JWM>'
elif [ ! -z "${SET}" ] && [ -z "${SYS}" ]
then
#System)SYS=${SYS}${MenuEntry};;
GNOME_MENU='<?xml version="1.0"?>
<JWM>
<!-- generated by '$PWD'/'$0' -->
  <RootMenu height="0" onroot="'$SYS_ROOT'">
  '${SET}'
  </RootMenu>
</JWM>'
else
GNOME_MENU=""
fi
}
echo "$GNOME_MENU" >> "${GNOME_SYS_MENUFILE}"
sed -i 's/&/&amp;/g' "${GNOME_SYS_MENUFILE}"
RESULT=$(jwm -reload)
echo "Done!
${THISMENU}
$RESULT"

