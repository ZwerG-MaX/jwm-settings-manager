#!/bin/bash
###############################################
#                                             #
#       ToriOS OS Places Menu (JWM)           #
# copyright Israel <israel@torios.org> 2014   #
#               GPL3 License                  #
#                                             #
#      Prov 24:13 My son, eat thou honey,     #
#     because it is good; and the honeycomb,  #
#       which is sweet to thy taste:          #
# 14 So shall the knowledge of wisdom         #
# be unto thy soul: when thou hast found it,  #
#       then there shall be a reward,         #
#   and thy expectation shall not be cut off. #
#                                             #
#      Prose from KJV Bible public Domain     #
#                                             #
###############################################
PLACES_ROOT="7"
JWMRC="$HOME/.jwmrc"
if [ ! -d "${HOME}"/.config ]
then
  mkdir "${HOME}"/.config
fi
  ## Lets make sure they have the file first
if [ ! -f "$HOME/.config/user-dirs.dirs" ]
then
  ## if not see if we can make it
  if [ ! -x /usr/bin/xdg-user-dirs-update ]
  then
    echo "/usr/bin/xdg-user-dirs-update doesn't exist!!
Please install xdg-user-dirs"
    exit 1
  else
    xdg-user-dirs-update
  fi
fi

if [ ! -x /usr/bin/xdg-user-dir ]
then
  echo "/usr/bin/xdg-user-dir doesn't exist!!
Please install xdg-user-dirs"
  exit 1
fi
ICONDIRS=( $(grep "<IconPath" "${JWMRC}" | sed 's|<IconPath>||' | sed 's|</IconPath>||'| sed 's|/usr/share/pixmaps/ ||'| sed 's|/usr/share/icons/ ||') )
png=0
svg=0
for i in "${ICONDIRS[@]}"
do
DIR2="$i"
  PNG=$(ls ${DIR2}*.png 2>/dev/null)
  if [ ! -z "${PNG}" ]
  then
    png=$((png+1))
  fi
  SVG=$(ls ${DIR2}*.svg 2>/dev/null)
  if [ ! -z "${SVG}" ]
  then
    svg=$((svg+1))
  fi
done
if [ $((svg>png)) ]
then
   EXT=".svg"
else
   EXT=".png"
fi
PLACES="$HOME/.config/placesmenu"
if [ ! -f "${PLACES}" ]
then
  touch "${PLACES}"
fi

XDG_COMM=$(which xdg-user-dir)
#DESKTOP=$( "${XDG_COMM}" DESKTOP)
DOCUMENTS=$( "${XDG_COMM}" DOCUMENTS)
DOWNLOADS=$( "${XDG_COMM}" DOWNLOAD)
MUSIC=$( "${XDG_COMM}" MUSIC)
PICTURES=$( "${XDG_COMM}" PICTURES)
#PUBLICSHARE=$( "${XDG_COMM}" PUBLICSHARE)
#TEMPLATES=$( "${XDG_COMM}" TEMPLATES)
VIDEOS=$( "${XDG_COMM}" VIDEOS)
VIDEOS_DIR=${VIDEOS##$HOME/}
#DESKTOP_DIR=${DESKTOP##$HOME/}
DOCUMENTS_DIR=${DOCUMENTS##$HOME/}
DOWNLOADS_DIR=${DOWNLOADS##$HOME/}
MUSIC_DIR=${MUSIC##$HOME/}
PICTURES_DIR=${PICTURES##$HOME/}
#PUBLICSHARE_DIR=${PUBLICSHARE##$HOME/}
#TEMPLATES_DIR=${TEMPLATES##$HOME/}
VIDEOS_DIR=${VIDEOS##$HOME/}
HOME_DIR="Home"

## This is for the Applications item
DD=/usr/share/desktop-directories
## Set a default value just incase we need it :)
APPS_NAME="Applications"
##make sure the directory exists before we assume it does
if [ -d "$DD" ]
then
  for APPS in ${DD}/jwm-appl* ; do
    while read NAME_LINE || [ "$NAME_LINE" ]; do
       case $NAME_LINE in
         Name?${myLANG%_*}?=*|Name=*) APPS_NAME="${NAME_LINE#*=}"'';;
       esac
     done < "$APPS"
  done
fi
for PLACES_TRANS in ${DD}/jwm-home.directory
do
	while read P_LINE || [ "$P_LINE" ]
        do
		case $P_LINE in
			Name?${myLANG%_*}?=*|Name=*) PLACES_NAME="${P_LINE#*=}"'';;
			Icon=*) PLACES_ICON="${P_LINE#*=}"''  ;;
		esac
	done < "$PLACES_TRANS"
done
MENU='<?xml version="1.0"?>
<JWM>
<!-- generated by '$0' -->
   <RootMenu height="0" onroot="'$PLACES_ROOT'">
        <Program icon="folder-home'$EXT'" label="'$HOME_DIR'">xdg-open '$HOME'</Program>
        <Program icon="folder-documents'$EXT'" label="'$DOCUMENTS_DIR'">xdg-open '$DOCUMENTS'</Program>
        <Program icon="folder-downloads'$EXT'" label="'$DOWNLOADS_DIR'">xdg-open '$DOWNLOADS'</Program>
        <Program icon="folder-music'$EXT'" label="'$MUSIC_DIR'">xdg-open -n '$MUSIC'</Program>
        <Program icon="folder-pictures'$EXT'" label="'$PICTURES_DIR'">xdg-open '$PICTURES'</Program>
        <Program icon="folder-video'$EXT'" label="'$VIDEOS_DIR'">xdg-open '$VIDEOS'</Program>
        <Program icon="user-trash'$EXT'" label="Trash">xdg-open ~/.local/share/Trash/files</Program>
        <Program icon="file-manager'$EXT'" label="Connected Devices">xdg-open /media</Program>
    </RootMenu>
</JWM>'
#echo "$MENU"
echo "$MENU" > "$PLACES"
PLACESINCLUDE=$(grep "<Include>${MENUFILE}</Include>" "${JWMRC}")
if [ ! -z "${PLACESINCLUDE}" ]
then
  CURRENTPLACES=$(grep ">root:$PLACES_ROOT</TrayButton>" "${JWMRC}")
  NEWPLACES="<TrayButton label=\"${PLACES_NAME}\" icon=\"${PLACES_ICON}${EXT}\" border=\"false\">root:$PLACES_ROOT</TrayButton>"
  if [ -f "${JWMRC}" ]
  then
    THISPLACES=$(sed "s|$CURRENTPLACES|$NEWPLACES|" "${JWMRC}")
  fi
fi
RESULT=$(jwm -reload)
echo "Updated Places menu
$THISPLACES
$RESULT"
